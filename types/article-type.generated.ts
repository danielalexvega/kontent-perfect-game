/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: âš¾ Perfect Game
 * Environment: Production
 * Id: 9609eaef-6582-007e-452c-3b671b800257
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CategoryTaxonomyTermCodenames, CategoryTaxonomyCodename } from '../taxonomies/category-taxonomy.generated.js';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { MetadataSnippet } from '../snippets/metadata-snippet.generated.js';
import type { PersonType } from '../types/person-type.generated.js';
import type { TagType } from '../types/tag-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Article' type
*/
            export type ArticleTypeCodename = keyof Pick<Record<TypeCodenames, null>, "article">;

            /*
* Typeguard for codename of 'Article' type
*/
            export function isArticleTypeCodename(value: string | undefined | null): value is ArticleTypeCodename {
                return typeof value === 'string' && value === ('article' satisfies ArticleTypeCodename);
            }

/*
    * Article
    *
    * Id: 6b784b18-36e9-5080-b8b2-d35070e12b1a
* Codename: article
* External Id: 55862751-07da-4c6a-bbdf-14d9bd724429
    */
export type ArticleType = IContentItem<
{
/*
    * Title
    *
    * Codename: title
* Id: 076df794-d184-5a2c-b9e6-18a030428830
* External Id: 084dc982-e38a-411e-ad83-c3136a2f57e5
* Type: text
* Required: true
    */
                readonly title: Elements.TextElement;

/*
    * Subtitle
    *
    * Codename: subtitle
* Id: 673fa7a5-4bdc-55b8-80cc-a83c7c69e9bf
* External Id: 80f031c5-139c-46da-9e45-a0b6e286d80a
* Type: text
* Required: false
    */
                readonly subtitle: Elements.TextElement;

/*
    * Summary
    *
    * Codename: summary
* Id: a1d01b9f-bdf8-503b-87fd-648888c141ff
* External Id: c29d6a1c-784e-4ab3-bfbf-1d691871e10e
* Type: text
* Required: false
    */
                readonly summary: Elements.TextElement;

/*
    * Body
    *
    * Codename: body
* Id: 4d8f14be-972b-5ed4-a412-17ea0d20fed8
* External Id: 443f58c9-e2b4-4f84-92dc-292de692dea8
* Type: rich_text
* Required: true
    */
                readonly body: Elements.RichTextElement<CoreType>;

/*
    * Image
    *
    * Codename: image
* Id: 9390c331-8f7b-5b09-8afb-a71c954e560c
* External Id: 67d50790-7a6f-46b4-8155-e14b237079a4
* Type: asset
* Required: false
    */
                readonly image: Elements.AssetsElement;

/*
    * Date
    *
    * Codename: date
* Id: 4fc0f948-a705-5da3-bd5d-8abd57ffe95b
* External Id: 1879dafa-0042-4b20-b0c8-7671c1787c92
* Type: date_time
* Required: false
    */
                readonly date: Elements.DateTimeElement;

/*
    * Author
    *
    * Codename: author
* Id: 23e1fefb-7ce5-5687-b16e-d5fa193bcb78
* External Id: 98b50ed5-c80f-453a-bb18-47cf3c1fab34
* Type: modular_content
* Required: false
* Allowed content types: person_1de89584e
    */
                readonly author: Elements.LinkedItemsElement<PersonType>;

/*
    * Tags
    *
    * Codename: tags
* Id: a8769c2c-a20b-5fb9-af9d-190ba9ce1fe4
* External Id: 3d9231af-7af8-4581-b126-580c82b70742
* Type: modular_content
* Required: false
* Allowed content types: tag
    */
                readonly tags: Elements.LinkedItemsElement<TagType>;

/*
    * Category
    *
    * Codename: category
* Id: cde6b954-a820-5505-98cf-569e800ff1d9
* External Id: 2a947c37-6461-47a2-8881-610224b0e2f4
* Type: taxonomy
* Required: false
* Taxonomy: category_f30035fd1
    */
                readonly category: Elements.TaxonomyElement<CategoryTaxonomyTermCodenames, CategoryTaxonomyCodename>;

/*
    * Slug
    *
    * Codename: slug
* Id: abe007e2-54ee-5864-b427-0d1677cd1fdb
* External Id: adc6e26d-d5e5-438e-bff6-0de02a8116a9
* Type: url_slug
* Required: false
    */
                readonly slug: Elements.UrlSlugElement;} & MetadataSnippet, 
ArticleTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Article
*/
export type ArticleTypeElementCodenames = 'title' | 'subtitle' | 'summary' | 'body' | 'image' | 'date' | 'author' | 'tags' | 'category' | 'slug' | 'metadata_c70df4f4c__metadata__meta_title' | 'metadata_c70df4f4c__metadata__meta_description' | 'metadata_c70df4f4c__metadata__meta_keywords' | 'metadata_c70df4f4c__metadata__robots';;

/*
    * Type guard for Article
    *
    * Id: 6b784b18-36e9-5080-b8b2-d35070e12b1a
* Codename: article
* External Id: 55862751-07da-4c6a-bbdf-14d9bd724429
    */
export function isArticleType(item: IContentItem | undefined | null): item is ArticleType {
                return item?.system.type === ('article' satisfies ArticleTypeCodename);
            };

export type ArticleTypeIncludeInRobotsTxtMultipleChoiceOptions = 'yes' | 'no'

            