/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: âš¾ Perfect Game
 * Environment: Production
 * Id: 9609eaef-6582-007e-452c-3b671b800257
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Tag' type
*/
            export type TagTypeCodename = keyof Pick<Record<TypeCodenames, null>, "tag">;

            /*
* Typeguard for codename of 'Tag' type
*/
            export function isTagTypeCodename(value: string | undefined | null): value is TagTypeCodename {
                return typeof value === 'string' && value === ('tag' satisfies TagTypeCodename);
            }

/*
    * Tag
    *
    * Id: 93eac4c4-48ce-5be0-a2f2-49a72fd4db47
* Codename: tag
* External Id: 59d8e59d-cd31-4c7f-a8f3-26d2bd920789
    */
export type TagType = IContentItem<
{
/*
    * Label
    *
    * Codename: label
* Id: e9bfb2ed-298b-53e6-b122-bb3a44aadb6e
* External Id: 4a28c720-c1ed-4f81-b213-a939e6d6399f
* Type: text
* Required: true
    */
                readonly label: Elements.TextElement;

/*
    * Link
    *
    * Codename: link
* Id: 69dfe72e-a268-5e11-9842-b5565c7340a7
* External Id: 4ec72e67-47e4-49d5-b443-e7cc22a9ac39
* Type: modular_content
* Required: false
    */
                readonly link: Elements.LinkedItemsElement<CoreType>;

/*
    * taxonomy
    *
    * Codename: category
* Id: fee0e488-023a-5960-9fe5-745c9aa86f93
* External Id: 2f7d6067-ef6f-4459-a230-f47a591c7c4f
* Type: taxonomy
* Required: false
    */
                readonly category: Elements.TaxonomyElement;}, 
TagTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Tag
*/
export type TagTypeElementCodenames = 'label' | 'link' | 'category';;

/*
    * Type guard for Tag
    *
    * Id: 93eac4c4-48ce-5be0-a2f2-49a72fd4db47
* Codename: tag
* External Id: 59d8e59d-cd31-4c7f-a8f3-26d2bd920789
    */
export function isTagType(item: IContentItem | undefined | null): item is TagType {
                return item?.system.type === ('tag' satisfies TagTypeCodename);
            };



            