/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: âš¾ Perfect Game
 * Environment: Production
 * Id: 9609eaef-6582-007e-452c-3b671b800257
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CategoryTaxonomyTermCodenames, CategoryTaxonomyCodename } from '../taxonomies/category-taxonomy.generated.js';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Image' type
*/
            export type ImageTypeCodename = keyof Pick<Record<TypeCodenames, null>, "image">;

            /*
* Typeguard for codename of 'Image' type
*/
            export function isImageTypeCodename(value: string | undefined | null): value is ImageTypeCodename {
                return typeof value === 'string' && value === ('image' satisfies ImageTypeCodename);
            }

/*
    * Image
    *
    * Id: a8d0d619-6e6e-5b9f-bb74-86c46fc2e4a1
* Codename: image
* External Id: 8f77aaf1-4bec-4dbf-b1b4-c3b9e41a5566
    */
export type ImageType = IContentItem<
{
/*
    * Title
    *
    * Codename: title
* Id: 4e873f85-a0d1-5da0-8f9d-9590b57baa4d
* External Id: 6bd425c1-d29a-4abf-be11-bfa41d89a380
* Type: text
* Required: false
    */
                readonly title: Elements.TextElement;

/*
    * Asset
    *
    * Codename: asset
* Id: a4b6172f-b55e-5120-b43d-f9171badbf2d
* External Id: e21bb307-ebfb-428a-bda3-46c3e70907f3
* Type: asset
* Required: true
    */
                readonly asset: Elements.AssetsElement;

/*
    * Caption
    *
    * Codename: caption
* Id: 940a8249-d04c-56f9-9d62-51925017079f
* External Id: 005dcc85-dccd-42f3-9a57-2fe12d329b26
* Type: text
* Required: false
    */
                readonly caption: Elements.TextElement;

/*
    * Description
    *
    * Codename: description
* Id: 717fa6a0-4241-57a2-b741-87a1d57e90f3
* External Id: e88cc370-9909-48ad-b95b-ce1c829749fb
* Type: rich_text
* Required: false
    */
                readonly description: Elements.RichTextElement<CoreType>;

/*
    * Link
    *
    * Codename: link
* Id: 705a8ca4-7cde-5e6d-80ef-b0268fe47c1b
* External Id: 230a835d-e98e-4de3-98af-4d1807edd1fa
* Type: modular_content
* Required: false
    */
                readonly link: Elements.LinkedItemsElement<CoreType>;

/*
    * Alternate Text
    *
    * Codename: alternate_text
* Id: f7354f48-66b0-5f7d-a67a-60f6353c14ff
* External Id: 0c618a37-6857-4aab-bb21-0f46fb9f7184
* Type: text
* Required: false
    */
                readonly alternate_text: Elements.TextElement;

/*
    * Category
    *
    * Codename: category
* Id: bb468c64-4f0d-5d69-8b0f-d3aaaef609cc
* External Id: 19b68572-1cc4-4e48-acc3-d30a2d5a7bb9
* Type: taxonomy
* Required: false
* Taxonomy: category_f30035fd1
    */
                readonly category: Elements.TaxonomyElement<CategoryTaxonomyTermCodenames, CategoryTaxonomyCodename>;}, 
ImageTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Image
*/
export type ImageTypeElementCodenames = 'title' | 'asset' | 'caption' | 'description' | 'link' | 'alternate_text' | 'category';;

/*
    * Type guard for Image
    *
    * Id: a8d0d619-6e6e-5b9f-bb74-86c46fc2e4a1
* Codename: image
* External Id: 8f77aaf1-4bec-4dbf-b1b4-c3b9e41a5566
    */
export function isImageType(item: IContentItem | undefined | null): item is ImageType {
                return item?.system.type === ('image' satisfies ImageTypeCodename);
            };



            