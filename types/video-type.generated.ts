/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: âš¾ Perfect Game
 * Environment: Production
 * Id: 9609eaef-6582-007e-452c-3b671b800257
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { LinkType } from '../types/link-type.generated.js';
import type { MetadataSnippet } from '../snippets/metadata-snippet.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Video' type
*/
            export type VideoTypeCodename = keyof Pick<Record<TypeCodenames, null>, "video">;

            /*
* Typeguard for codename of 'Video' type
*/
            export function isVideoTypeCodename(value: string | undefined | null): value is VideoTypeCodename {
                return typeof value === 'string' && value === ('video' satisfies VideoTypeCodename);
            }

/*
    * Video
    *
    * Id: 836335bb-f60d-5f49-8fcb-d37b9bb2d7a9
* Codename: video
* External Id: b9f4d06a-df05-4fb2-9a36-75eda3fabaf8
    */
export type VideoType = IContentItem<
{
/*
    * Title
    *
    * Codename: title
* Id: ae723e06-3501-5c3b-9d88-f1e6cc3d4457
* External Id: df3c09c6-2d74-4599-bfd8-89e9160f3303
* Type: text
* Required: false
    */
                readonly title: Elements.TextElement;

/*
    * Video Link
    *
    * Codename: video_link
* Id: 3e87ac68-2ffc-5ee8-98f7-9737c756a99f
* External Id: c4f3397d-248a-42aa-bbc8-2031a38f4a43
* Type: modular_content
* Required: true
* Allowed content types: link_a0dbe3d92
    */
                readonly video_link: Elements.LinkedItemsElement<LinkType>;

/*
    * Description
    *
    * Codename: description
* Id: 16ec872f-ad06-58ee-ba64-bd54d5e583ef
* External Id: 61fbfdf6-5f18-4029-a699-0b79f82a4058
* Type: rich_text
* Required: false
    */
                readonly description: Elements.RichTextElement<CoreType>;

/*
    * Caption
    *
    * Codename: caption
* Id: a924e89c-c4b2-5180-9f70-f3fef07b8d77
* External Id: 44147b1b-4e89-4a90-8a86-cc633a35413d
* Type: text
* Required: false
    */
                readonly caption: Elements.TextElement;} & MetadataSnippet, 
VideoTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Video
*/
export type VideoTypeElementCodenames = 'title' | 'video_link' | 'description' | 'caption' | 'metadata_c70df4f4c__metadata__meta_title' | 'metadata_c70df4f4c__metadata__meta_description' | 'metadata_c70df4f4c__metadata__meta_keywords' | 'metadata_c70df4f4c__metadata__robots';;

/*
    * Type guard for Video
    *
    * Id: 836335bb-f60d-5f49-8fcb-d37b9bb2d7a9
* Codename: video
* External Id: b9f4d06a-df05-4fb2-9a36-75eda3fabaf8
    */
export function isVideoType(item: IContentItem | undefined | null): item is VideoType {
                return item?.system.type === ('video' satisfies VideoTypeCodename);
            };

export type VideoTypeIncludeInRobotsTxtMultipleChoiceOptions = 'yes' | 'no'

            