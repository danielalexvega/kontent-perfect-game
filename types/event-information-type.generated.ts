/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: âš¾ Perfect Game
 * Environment: Production
 * Id: 9609eaef-6582-007e-452c-3b671b800257
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { PersonType } from '../types/person-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Event Information' type
*/
            export type EventInformationTypeCodename = keyof Pick<Record<TypeCodenames, null>, "event_information">;

            /*
* Typeguard for codename of 'Event Information' type
*/
            export function isEventInformationTypeCodename(value: string | undefined | null): value is EventInformationTypeCodename {
                return typeof value === 'string' && value === ('event_information' satisfies EventInformationTypeCodename);
            }

/*
    * Event Information
    *
    * Id: 2c0024a7-5607-41e4-8540-3ce5003f1d68
* Codename: event_information
    */
export type EventInformationType = IContentItem<
{
/*
    * Event Information Body
    *
    * Codename: event_information_body
* Id: f77e83d0-0a32-4e8a-bf75-4ce99b8aadb2
* Type: rich_text
* Required: false
    */
                readonly event_information_body: Elements.RichTextElement<CoreType>;

/*
    * Event Information Image
    *
    * Codename: event_information_image
* Id: a1f2458b-5a17-40ab-9c0a-bbf516460c92
* Type: asset
* Required: false
    */
                readonly event_information_image: Elements.AssetsElement;

/*
    * Event Results
    *
    * Codename: event_results
* Id: 6564b53b-d099-4765-a322-f33db2a52e06
* Type: rich_text
* Required: false
    */
                readonly event_results: Elements.RichTextElement<CoreType>;

/*
    * Event Most Valuable Player
    *
    * Codename: event_most_valuable_player
* Id: 810188be-df78-4349-a9d2-cd5dd3c97752
* Type: text
* Required: false
    */
                readonly event_most_valuable_player: Elements.TextElement;

/*
    * Event Most Valuable Pitcher
    *
    * Codename: event_most_valuable_pitcher
* Id: 2d199390-ab1e-48d9-82c5-c9e62235632e
* Type: text
* Required: false
    */
                readonly event_most_valuable_pitcher: Elements.TextElement;

/*
    * Contact
    *
    * Codename: contact
* Id: b2b9566d-c50f-410f-bbcf-7970f72fd0d6
* Type: modular_content
* Required: false
* Allowed content types: person_1de89584e
    */
                readonly contact: Elements.LinkedItemsElement<PersonType>;}, 
EventInformationTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Event Information
*/
export type EventInformationTypeElementCodenames = 'event_information_body' | 'event_information_image' | 'event_results' | 'event_most_valuable_player' | 'event_most_valuable_pitcher' | 'contact';;

/*
    * Type guard for Event Information
    *
    * Id: 2c0024a7-5607-41e4-8540-3ce5003f1d68
* Codename: event_information
    */
export function isEventInformationType(item: IContentItem | undefined | null): item is EventInformationType {
                return item?.system.type === ('event_information' satisfies EventInformationTypeCodename);
            };



            