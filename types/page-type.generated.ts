/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: âš¾ Perfect Game
 * Environment: Production
 * Id: 9609eaef-6582-007e-452c-3b671b800257
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { MetadataSnippet } from '../snippets/metadata-snippet.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Page' type
*/
            export type PageTypeCodename = keyof Pick<Record<TypeCodenames, null>, "page">;

            /*
* Typeguard for codename of 'Page' type
*/
            export function isPageTypeCodename(value: string | undefined | null): value is PageTypeCodename {
                return typeof value === 'string' && value === ('page' satisfies PageTypeCodename);
            }

/*
    * Page
    *
    * Id: 45eacb4c-4b81-48a5-b59a-edda64f9f821
* Codename: page
    */
export type PageType = IContentItem<
{
/*
    * Headline
    *
    * Codename: headline
* Id: 3b21b28b-70f2-4c30-bb0a-5a8fe5e304d6
* Type: text
* Required: true
    */
                readonly headline: Elements.TextElement;

/*
    * Subheadline
    *
    * Codename: subheadline
* Id: 67bfcdb4-f564-4a3e-bbf5-2137824c582f
* Type: text
* Required: false
    */
                readonly subheadline: Elements.TextElement;

/*
    * Hero Image
    *
    * Codename: hero_image
* Id: c814d1b5-5b22-4d64-b80f-726c1bdabd79
* Type: asset
* Required: false
    */
                readonly hero_image: Elements.AssetsElement;

/*
    * Body
    *
    * Codename: body
* Id: bb00808f-50b3-43b5-b711-9acbfc1b3f8a
* Type: rich_text
* Required: false
    */
                readonly body: Elements.RichTextElement<CoreType>;

/*
    * URL
    *
    * Codename: url
* Id: 78ec1e2c-9ccc-4347-9887-5b446b87e852
* Type: url_slug
* Required: true
    */
                readonly url: Elements.UrlSlugElement;

/*
    * Subpages
    *
    * Codename: subpages
* Id: ee2ead3c-a3e2-4d92-a308-bf1a296c4b26
* Type: subpages
* Required: false
    */
                readonly subpages: Elements.LinkedItemsElement<CoreType>;} & MetadataSnippet, 
PageTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Page
*/
export type PageTypeElementCodenames = 'headline' | 'subheadline' | 'hero_image' | 'body' | 'metadata_c70df4f4c__metadata__meta_title' | 'metadata_c70df4f4c__metadata__meta_description' | 'metadata_c70df4f4c__metadata__meta_keywords' | 'metadata_c70df4f4c__metadata__robots' | 'url' | 'subpages';;

/*
    * Type guard for Page
    *
    * Id: 45eacb4c-4b81-48a5-b59a-edda64f9f821
* Codename: page
    */
export function isPageType(item: IContentItem | undefined | null): item is PageType {
                return item?.system.type === ('page' satisfies PageTypeCodename);
            };

export type PageTypeIncludeInRobotsTxtMultipleChoiceOptions = 'yes' | 'no'

            