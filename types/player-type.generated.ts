/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: âš¾ Perfect Game
 * Environment: Production
 * Id: 9609eaef-6582-007e-452c-3b671b800257
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Player' type
*/
            export type PlayerTypeCodename = keyof Pick<Record<TypeCodenames, null>, "player">;

            /*
* Typeguard for codename of 'Player' type
*/
            export function isPlayerTypeCodename(value: string | undefined | null): value is PlayerTypeCodename {
                return typeof value === 'string' && value === ('player' satisfies PlayerTypeCodename);
            }

/*
    * Player
    *
    * Id: 48cb6de0-89c3-4e51-87a8-d8dd5503c275
* Codename: player
    */
export type PlayerType = IContentItem<
{
/*
    * Name
    *
    * Codename: name
* Id: f27999b9-af17-4d95-ad3e-44d2ca89f585
* Type: text
* Required: false
    */
                readonly name: Elements.TextElement;

/*
    * Projected Class
    *
    * Codename: projected_class
* Id: 65bfb405-e6bd-42d5-b5ce-296c3c921020
* Type: text
* Required: false
    */
                readonly projected_class: Elements.TextElement;

/*
    * Position
    *
    * Codename: position
* Id: 9c2e69ef-d2af-4b07-a38c-ef6cea87c593
* Type: text
* Required: false
    */
                readonly position: Elements.TextElement;

/*
    * Hometown
    *
    * Codename: hometown
* Id: 43dbef5c-537c-44d5-8b0a-36b099a75485
* Type: text
* Required: false
    */
                readonly hometown: Elements.TextElement;}, 
PlayerTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Player
*/
export type PlayerTypeElementCodenames = 'name' | 'projected_class' | 'position' | 'hometown';;

/*
    * Type guard for Player
    *
    * Id: 48cb6de0-89c3-4e51-87a8-d8dd5503c275
* Codename: player
    */
export function isPlayerType(item: IContentItem | undefined | null): item is PlayerType {
                return item?.system.type === ('player' satisfies PlayerTypeCodename);
            };



            